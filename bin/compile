#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

### Configure salesforce directories
SALESFORCE_DIR_NAME=".salesforce"
SALESFORCE_DIR=$BUILD_DIR/$SALESFORCE_DIR_NAME
SALESFORCE_CACHE_DIR=$CACHE_DIR/$SALESFORCE_DIR_NAME

### Load dependencies
source $BP_DIR/lib/common.sh
source $BP_DIR/lib/node.sh
source $BP_DIR/lib/libs.sh

echo ""
status "Welcome to Salesforce Buildpack!!"
echo ""

# present of files below determine how we handle deployment
if [ -f $1/salesforce/src/package.xml ]; then
    log "Found Force.com Metadata API project"
    export SALESFORCE_WORKSPACE=false
elif [ -f $1/config.json ]; then
    log "Found Force.com workspace project"
    export SALESFORCE_WORKSPACE=true
fi

### Compile
status "Exporting config vars to environment"
export_env_dir

mkdir -p $SALESFORCE_DIR
export SALESFORCE_DIR=$SALESFORCE_DIR

install_nodejs $SALESFORCE_CACHE_DIR
# Put node in build dir since the cache is not available at time of deploy
cp -a $SALESFORCE_CACHE_DIR/node $SALESFORCE_DIR/node
export PATH="$SALESFORCE_DIR/node/bin":$PATH

status "Generating release phase deploy script to $SALESFORCE_DIR/deploy"
cp -R $BP_DIR/lib/* $SALESFORCE_DIR/
cp $BP_DIR/package.json $SALESFORCE_DIR/package.json
# write script triggering node-based deployment to-be-invoked bin/release

echo "$SALESFORCE_DIR/node/bin/node $SALESFORCE_DIR/force.js release" > $SALESFORCE_DIR/deploy
chmod +x $SALESFORCE_DIR/deploy
cat $SALESFORCE_DIR/deploy

status "Generating test phase script to $SALESFORCE_DIR/test"
# write script to-be-invoked via test phase per app.json
cat <<EOT >> $SALESFORCE_DIR/test
#!/usr/bin/env bash
$SALESFORCE_DIR/node/bin/node $SALESFORCE_DIR/force.js test
EOT
chmod +x $SALESFORCE_DIR/test
cat $SALESFORCE_DIR/test

status "Installing modules"
cd $SALESFORCE_DIR
npm install | indent

# double-check that node is installed
if [ ! -f $SALESFORCE_DIR/node/bin/node ]; then
    status "! Node not found at $SALESFORCE_DIR/node/bin/node"
    exit 1
fi

# install secret tool used by appcloud
# FIXME: disabled for now
#install_libsecret

# delegate actual source deployment to node script
$SALESFORCE_DIR/node/bin/node $SALESFORCE_DIR/force.js compile

# REVIEWME: echo before 'force.js compile' call?
echo ""
echo "Configure your application to invoke '$SALESFORCE_DIR/test' in your test section of app.json to run all Apex test via Heroku CI"
echo "Configure your application to invoke '$SALESFORCE_DIR/deploy' in your release phase script or Procfile"
